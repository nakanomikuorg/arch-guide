import{_ as i,a}from"./chunks/pre-virt_vb-15.BHMr9w-k.js";import{_ as e,c as n,o as l,ag as t}from"./chunks/framework.CDhRSyRB.js";const p="/assets/basic-install_reflector.C82zlza7.png",d="/assets/basic-install_check-efi.Cst0GaUE.png",c="/assets/basic-install_ping.BDHpp9ke.png",r="/assets/basic-install_time.Dmuxtefc.png",o="/assets/basic-install_mirrorlist-1.DS2ha-4u.png",h="/assets/basic-install_mirrorlist-2.CITp5j1o.png",k="/assets/basic-install_partition-1.Bh1Xqg5R.png",b="/assets/basic-install_partition-2.DLT4hhE7.png",u="/assets/basic-install_partition-3.BjLUGd3s.png",g="/assets/basic-install_partition-4.Dqv4NCG5.png",m="/assets/basic-install_partition-5.Dyfk--lB.png",F="/assets/basic-install_partition-6.B8rtj9qg.png",v="/assets/basic-install_partition-7._YVoQizt.png",y="/assets/basic-install_partition-8.B5Mxus1B.png",C="/assets/basic-install_partition-9.CHsqU1Wz.png",B="/assets/basic-install_partition-10.B4WDaAwE.png",_="/assets/basic-install_partition-11.BbqbEG9-.png",f="/assets/basic-install_partition-12.CDCzeWEA.png",E="/assets/basic-install_partition-13.BZSCCyuz.png",x="/assets/basic-install_partition-14.BzdDh6PY.png",w="/assets/basic-install_mkswap.CzM8dA_8.png",A="/assets/basic-install_mkbtrfs-1.CpWxbwoC.png",D="/assets/basic-install_mkbtrfs-2.CNm0O5gq.png",z="/assets/basic-install_mkbtrfs-3.DnVJ6tP6.png",q="/assets/basic-install_mkbtrfs-4.Q0fek3jd.png",U="/assets/basic-install_mkbtrfs-5.EEnZGPJv.png",S="/assets/basic-install_mount-1.DSGPGhwn.png",G="/assets/basic-install_mount-2.C_eaivrb.png",P="/assets/basic-install_mount-3.9HC0QeP4.png",I="/assets/basic-install_mount-4.BOyAfSXA.png",R="/assets/basic-install_pacstrap-1.Q3dLs9X-.png",T="/assets/basic-install_pacstrap-2.6jDXL0pu.png",N="/assets/basic-install_fstab.CtqAJn7q.png",M="/assets/basic-install_chroot.d0svrCrQ.png",L="/assets/basic-install_set-name-and-timezone-1.B918CSnw.png",W="/assets/basic-install_set-name-and-timezone-2.CLbXR1mh.png",V="/assets/basic-install_set-name-and-timezone-3.BFRWq2B4.png",O="/assets/basic-install_set-name-and-timezone-4.BCj7m2n9.png",X="/assets/basic-install_locale-1.BesWF7lc.png",$="/assets/basic-install_locale-2.DWnbYuMb.png",H="/assets/basic-install_locale-3.lyU3oGqg.png",j="/assets/basic-install_passwd.C4vgFnXJ.png",Q="/assets/basic-install_grub-1.BRcfVSlw.png",K="/assets/basic-install_grub-2.HfHVvAuo.png",J="/assets/basic-install_grub-3.1YkNI2Qy.png",Y="/assets/os-prober-1.CUiTrPp8.png",Z="/assets/basic-install_finish.BFJMMeTg.png",ss="/assets/basic-install_last-step-1.BbAeF2iD.png",is="/assets/basic-install_last-step-2.OQfzBdal.png",as="/assets/basic-install_last-step-3.CRy-Yj5U.png",es="/assets/basic-install_fastfetch.Dc0n1esH.png",ks=JSON.parse('{"title":"archlinux 基础安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/rookie/basic-install.md","filePath":"guide/rookie/basic-install.md","lastUpdated":1728480956000}'),ns={name:"guide/rookie/basic-install.md"};function ls(ts,s,ps,ds,cs,rs){return l(),n("div",null,s[0]||(s[0]=[t('<h1 id="archlinux-基础安装" tabindex="-1">archlinux 基础安装 <a class="header-anchor" href="#archlinux-基础安装" aria-label="Permalink to &quot;archlinux 基础安装&quot;">​</a></h1><blockquote><h3 id="⛵-万事俱备-只欠东风" tabindex="-1">⛵ 万事俱备，只欠东风 <a class="header-anchor" href="#⛵-万事俱备-只欠东风" aria-label="Permalink to &quot;⛵ 万事俱备，只欠东风&quot;">​</a></h3><p>经过了上一节的准备工作，我们可以开始正式安装 archlinux 了。如果你还没有完成前面的阅读，请先仔细阅读章节 <a href="./pre-install.html">安装前的准备</a>。如果对本节的步骤不理解或者有疑问，请阅读下一节 <a href="./basic-install-detail.html">基础安装详解</a></p></blockquote><p>本节从安装最基础的、无图形化界面的 archlinux 系统开始。如有需要可以参阅 <a href="https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">ArchWiki 官方安装指南</a>。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>本节中的截图来自虚拟机和已经安装好的 archlinux。不用担心！和你在实体机看到的是一样的。</p></div><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>请按照指南的步骤一步一步进行！不要跳步、也不要在步骤中添加多余的动作！</p><p>另外，如果安装中有报错，请弄清楚报错的原因（这要求你起码能看懂有报错）！常见的原因包括但不限于输错了命令、添加了多余的步骤等。在解决了问题之后再进行下一步！</p></div><h2 id="_0-进入安装环境" tabindex="-1">0. 进入安装环境 <a class="header-anchor" href="#_0-进入安装环境" aria-label="Permalink to &quot;0. 进入安装环境&quot;">​</a></h2><p><img src="'+i+'" alt="archlinux-iso-1"></p><ol><li>在第一个选项回车</li></ol><p><img src="'+a+'" alt="archlinux-iso-2"></p><ol start="2"><li>进入安装环境后，便可以开始通过命令安装 archlinux 了</li></ol><h2 id="_1-禁用-reflector-服务" tabindex="-1">1. 禁用 reflector 服务 <a class="header-anchor" href="#_1-禁用-reflector-服务" aria-label="Permalink to &quot;1. 禁用 reflector 服务&quot;">​</a></h2><p>2020 年，archlinux 安装镜像中加入了 <code>reflector</code> 服务，它会自己更新 <code>mirrorlist</code>（软件包管理器 <code>pacman</code> 的软件源）。在特定情况下，它会误删某些有用的源信息。这里进入安装环境后的第一件事就是将其禁用。也许它是一个好用的工具，但是很明显，因为地理上造成的特殊网络环境，这项服务并不适合启用。</p><ol><li>通过以下命令将该服务禁用：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reflector.service</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>通过以下命令查看该服务是否被禁用，按下 <code>q</code> 退出结果输出：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reflector.service</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+p+'" alt="stop-reflector"></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><ul><li><p>在命令行中你可以使用如下命令清屏：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>同时，你可以使用 <code>Tab</code> 键在输入命令的时候对命令、参数或文件路径进行自动补全，提高效率的同时降低输入错误的风险。</p></li><li><p><code>Tab</code> 无法补全时，有些设备的蜂鸣器会发出“哔——”声，可以使用如下命令禁用蜂鸣器内核模块：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rmmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pcspkr</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>要永久禁用蜂鸣器内核模块, 请创建并编辑 <code>/etc/modprobe.d/blacklist.conf</code></p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudoedit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/modprobe.d/blacklist.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>加入以下内容</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>blacklist pcspkr</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样下次启动就不会加载 pcspkr 模块了</p></li></ul></div><h2 id="_2-再次确认是否为-uefi-模式" tabindex="-1">2. 再次确认是否为 UEFI 模式 <a class="header-anchor" href="#_2-再次确认是否为-uefi-模式" aria-label="Permalink to &quot;2. 再次确认是否为 UEFI 模式&quot;">​</a></h2><p>禁用 <code>reflector</code> 服务后，我们再来确认一下是否为 <code>UEFI</code> 模式：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sys/firmware/efi/efivars</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+d+`" alt="check-efi"></p><p>若输出了一堆东西（<code>efi</code> 变量），则说明已在 <code>UEFI</code> 模式。否则请确认你的启动方式是否为 <code>UEFI</code>。</p><h2 id="_3-连接网络" tabindex="-1">3. 连接网络 <a class="header-anchor" href="#_3-连接网络" aria-label="Permalink to &quot;3. 连接网络&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>archlinux 的安装<strong>必须</strong>要求网络环境。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>若为虚拟机且按照上一节 <a href="./pre-virt.html#_3-配置-virtualbox">虚拟机安装前的准备</a> 进行了配置；同时宿主机连接了网络，那么虚拟机应该已经连接网络了。</p></div><h3 id="若使用无线连接" tabindex="-1">若使用<strong>无线连接</strong> <a class="header-anchor" href="#若使用无线连接" aria-label="Permalink to &quot;若使用**无线连接**&quot;">​</a></h3><p>使用 <code>iwctl</code> 进行连接：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iwctl</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 进入交互式命令行</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 列出无线网卡设备名，比如无线网卡看到叫 wlan0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">station</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wlan0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scan</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 扫描网络</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">station</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wlan0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-networks</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 列出所有 wifi 网络</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">station</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wlan0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connect</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wifi-name</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 进行连接，注意这里无法输入中文。回车后输入密码即可</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 连接成功后退出</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>若无线网卡无法显示，请按照上一节 <a href="./pre-install.html#_1-确保网络环境">确保网络环境</a> 的说明<strong>确保你的无线网卡硬件开关处于打开状态</strong>。</p><p>你可以使用如下命令查看内核是否加载了你的无线网卡驱动。</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lspci</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Network</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>以我的硬件为例，输出如下：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">00:14.3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controller:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Intel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Corporation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Wi-Fi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AX201</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (rev </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如果你的 BIOS 没有开启无线网卡的开关可以参考下列的命令来开启 <code>WIFI</code></p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rfkill</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #查看无线连接 是否被禁用(blocked: yes)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wlan0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #比如无线网卡看到叫 wlan0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>若看到类似<code>Operation not possible due to RF-kill</code>的报错，继续尝试<code>rfkill unblock wifi</code>来解锁无线网卡。</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rfkill</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unblock</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wifi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>部分无线网卡不兼容，请考虑使用有线连接安装 archlinux。</p></div><h3 id="若使用有线连接" tabindex="-1">若使用<strong>有线连接</strong> <a class="header-anchor" href="#若使用有线连接" aria-label="Permalink to &quot;若使用**有线连接**&quot;">​</a></h3><p>正常来说，只要插上一个已经联网的路由器分出的网线（DHCP），直接就能联网。</p><p>可以等待几秒等网络建立连接后再进行下一步测试网络的操作。</p><p>若笔记本没有网线接口请使用带网线接口的扩展坞。</p><h2 id="_4-测试网络连通性" tabindex="-1">4. 测试网络连通性 <a class="header-anchor" href="#_4-测试网络连通性" aria-label="Permalink to &quot;4. 测试网络连通性&quot;">​</a></h2><p>通过 <code>ping</code> 命令测试网络连通性：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ping</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> www.bilibili.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+c+`" alt="ping"></p><p>稍等片刻，若能看到数据返回，即说明已经联网。与 Windows 不同的是，需要按下 <code>Ctrl</code> + <code>C</code> 手动退出 <code>ping</code> 命令。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>如果无线网络还是无法连接，请使用 <code>ip link</code> 命令查看无线网卡设备，使用 <code>ip link set &lt;设备名&gt; up</code> 命令激活对应的无线网卡。若看到类似 <code>Operation not possible due to RF-kill</code> 的报错，继续尝试 <code>rfkill unblock wifi</code> 来解锁无线网卡。</p><p>如有需要，可以参考 <a href="https://wiki.archlinux.org/title/Network_configuration_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Wireless_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%A3%80%E6%9F%A5%E8%AE%BE%E5%A4%87%E7%8A%B6%E6%80%81" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p></div><h2 id="_5-更新系统时钟" tabindex="-1">5. 更新系统时钟 <a class="header-anchor" href="#_5-更新系统时钟" aria-label="Permalink to &quot;5. 更新系统时钟&quot;">​</a></h2><p>使用 <code>timedatectl</code> 确保系统时间是准确的。这一步<strong>不是</strong>可选的，正确的系统时间对于部分程序来说非常重要：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-ntp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 将系统时间与网络时间进行同步</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 检查服务状态</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+r+`" alt="time"></p><h2 id="_6-更换国内软件仓库镜像源加快下载速度" tabindex="-1">6. 更换国内软件仓库镜像源加快下载速度 <a class="header-anchor" href="#_6-更换国内软件仓库镜像源加快下载速度" aria-label="Permalink to &quot;6. 更换国内软件仓库镜像源加快下载速度&quot;">​</a></h2><p>使用 <code>vim</code> 编辑器修改 <code>/etc/pacman.d/mirrorlist</code> 文件。将 <code>pacman</code> 软件仓库源更换为国内软件仓库镜像源：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/pacman.d/mirrorlist</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>如果不会使用 <code>vim</code> 编辑器，请参阅 <a href="./../advanced/system-ctl.html#终端编辑器-vim-的使用">这里</a>。</p><p><code>vim</code> 编辑器在安装和配置系统的过程中还需要使用多次。</p></div><p>放在最上面的是会使用的软件仓库镜像源，推荐的镜像源如下：</p><div class="language-mirrorlist vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mirrorlist</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line highlighted"><span>Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch # 中国科学技术大学开源镜像站</span></span>
<span class="line"><span>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch # 清华大学开源软件镜像站</span></span>
<span class="line"><span>Server = https://repo.huaweicloud.com/archlinux/$repo/os/$arch # 华为开源镜像站</span></span>
<span class="line"><span>Server = http://mirror.lzu.edu.cn/archlinux/$repo/os/$arch # 兰州大学开源镜像站</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="`+o+'" alt="mirrorlist-1"></p><p>修改完成的 <code>/etc/pacman.d/mirrorlist</code> 文件如图所示。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>如果发现 <code>/etc/pacman.d/mirrorlist</code> 是如图这个样子的，那么说明你禁用 <code>reflector</code> 服务晚了。<code>reflector</code> 已经自动帮你生成了新的软件仓库镜像源列表。不过没有关系，手动将国内软件仓库镜像源放在最前面即可。</p><p><img src="'+h+'" alt="mirrorlist-2"></p></div><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>前车之鉴 —— 请不在这一步中添加 <code>archlinuxcn</code> 源！如果你在 <code>/etc/pacman.conf</code> 中添加了内容，请将它们删掉。</p></div><h2 id="_7-分区和格式化-使用-btrfs-文件系统" tabindex="-1">7. 分区和格式化（使用 Btrfs 文件系统） <a class="header-anchor" href="#_7-分区和格式化-使用-btrfs-文件系统" aria-label="Permalink to &quot;7. 分区和格式化（使用 Btrfs 文件系统）&quot;">​</a></h2><h3 id="_7-1-分区" tabindex="-1">7-1. 分区 <a class="header-anchor" href="#_7-1-分区" aria-label="Permalink to &quot;7-1. 分区&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>虚拟机安装请同时参阅步骤 <a href="./basic-install-detail.html#🆕-全新安装">🆕 全新安装</a>。</p><p>分区步骤对于有些人来说是个难点，如果有不理解的地方请参阅下一节 <a href="./basic-install-detail.html#💾-分区和格式化">基础安装详解</a>。</p><p>同时，分区其它说明也会在下一节 <a href="./basic-install-detail.html#💾-分区和格式化">基础安装详解</a> 详细列出。</p></div><div class="danger custom-block"><p class="custom-block-title">☢️ 警告</p><p>分区操作的部分命令具有危险性！除非你知道每一个命令在干什么，否则请不要执行！</p><p>同时，请提前做好数据备份，防止数据丢失！</p></div><p>本指南考虑到多数情况，在这里首先介绍 win10 和 archlinux 在一个磁盘上双系统的分区配置。</p><ul><li><code>/</code> 根目录：<code>&gt;= 128GB</code>（和用户主目录在同一个 <code>Btrfs</code> 文件系统上）</li><li><code>/home</code> 用户主目录：<code>&gt;= 128GB</code>（和根目录在同一个 <code>Btrfs</code> 文件系统上）</li><li><code>/boot</code> EFI 分区：<code>256MB</code>（由电脑厂商或 Windows 决定，无需再次创建）</li><li>Swap 分区：<code>&gt;= 电脑实际运行内存的 60%</code>（设置这个大小是为了配置休眠准备）</li></ul><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>因为采用 <code>Btrfs</code> 文件系统，所以根目录和用户主目录实际在一个分区上，只是在不同的子卷上而已。这里根目录和用户主目录的大小仅为参考，一般来说日常使用的 linux 分配 128GB 已经够用了。</p></div><ol><li>通过 <code>lsblk</code> 命令，区分要安装 archlinux 的磁盘（通过观察磁盘的大小、已存在的分区情况等判断）并显示当前磁盘的分区情况：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsblk</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 显示当前分区情况</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+k+'" alt="partition-1"></p><p>此处要分区和安装 archlinux 的磁盘即为 <code>sda</code>。请根据你的实际情况判断！</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>为了模拟真实的环境，笔者手动创建了三个分区分别代表：</p><ol><li><code>sda1</code> —— EFI 分区</li><li><code>sda2</code> —— win10 下的 C 盘（象征性的分了 <code>1GB</code>）</li><li><code>sda3</code> —— win10 下的 D 盘（象征性的分了 <code>1GB</code>）</li></ol></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>注意此处并不会显出出未分配的磁盘空间！只有在使用 <code>cfdisk</code> 执行分区操作后才会显示出来。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>如果你的硬盘是 NVME 协议的固态硬盘，那么将不是 <code>sdx</code> 而是 <code>nvmexn1</code>。</p></div><ol start="2"><li>接下来使用 <code>cfdisk</code> 命令对磁盘分区（对于 SATA 协议的硬盘，<code>x</code> 为字母 <code>a</code>、<code>b</code> 或 <code>c</code> 等等；对于 NVME 协议的硬盘，<code>x</code> 为数字 <code>0</code>、<code>1</code> 或 <code>2</code> 等等，请根据实际情况判断）：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-ew5uR" id="tab-KuwfzAv" checked><label data-title="SATA" for="tab-KuwfzAv">SATA</label><input type="radio" name="group-ew5uR" id="tab-8lE6M_m"><label data-title="NVME" for="tab-8lE6M_m">NVME</label></div><div class="blocks"><div class="language-zsh vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cfdisk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 对安装 archlinux 的磁盘分区</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cfdisk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 对安装 archlinux 的磁盘分区</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p><img src="'+b+'" alt="partition-2"></p><p>进入 <code>cfdisk</code> 分区工具之后，你会看到如图所示的界面。通过方向键 <code>↑</code> 和 <code>↓</code> 可以在要操作磁盘分区或空余空间中移动；通过方向键 <code>←</code> 和 <code>→</code> 在对当前高亮的磁盘分区或空余空间要执行的操作中移动。</p><ol start="3"><li>首先创建 Swap 分区。选中 <code>Free space</code> &gt; 再选中操作 <code>[New]</code> &gt; 然后按下回车 <code>Enter</code> 以新建 <code>swap</code> 分区（类似 Windows 的交换文件）</li></ol><p><img src="'+u+'" alt="partition-3"></p><ol start="4"><li>按下回车后会提示输入 <code>分区大小</code>，Swap 分区建议为<strong>电脑内存大小的 60%</strong>，或者和内存大小相等 &gt; 然后按下回车 <code>Enter</code></li></ol><p><img src="'+g+'" alt="partition-4"></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>单位可以自行输入，如 <code>GB</code>、<code>MB</code> 等等。</p></div><ol start="5"><li>默认新建的类型是 <code>Linux filesystem</code>，我们需要将类型更改为 <code>Linux swap</code>。选中操作 <code>[Type]</code> &gt; 然后按下回车 <code>Enter</code> &gt; 通过方向键 <code>↑</code> 和 <code>↓</code> 选中 <code>Linux swap</code> &gt; 最后按下回车 <code>Enter</code></li></ol><p><img src="'+m+'" alt="partition-5"></p><p><img src="'+F+'" alt="partition-6"></p><p><img src="'+v+'" alt="partition-7"></p><ol start="6"><li>我们再只需要一个分区即可（因为使用 <code>Btrfs</code> 文件系统，所以根目录和用户主目录在一个分区上），所以类似的：选中 <code>Free space</code> &gt; 再选中操作 <code>[New]</code> &gt; 然后按下回车 <code>Enter</code> 以新建分区</li></ol><p><img src="'+y+'" alt="partition-8"></p><ol start="7"><li>输入 <code>分区大小</code>（默认是剩余的全部空间。请根据实际情况输入）&gt; 然后按下回车 <code>Enter</code></li></ol><p><img src="'+C+'" alt="partition-9"></p><ol start="8"><li>分区类型默认即可，无需更改。接下来选中操作 <code>[Write]</code> 并回车 <code>Enter</code> &gt; 输入 <code>yes</code> 并回车 <code>Enter</code> 确认分区操作</li></ol><p><img src="'+B+'" alt="partition-10"></p><p><img src="'+_+'" alt="partition-11"></p><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>只有写入了操作分区表才会更改。</p></div><ol start="9"><li>选中操作 <code>[Quit]</code> 并回车 <code>Enter</code> 以退出 <code>cfdisk</code> 分区工具</li></ol><p><img src="'+f+'" alt="partition-12"></p><div class="danger custom-block"><p class="custom-block-title">☢️ 警告</p><p>再次提醒！请仔细检查命令和操作的正确性，否则将出现不可预料的情况。最危险的是可能造成数据丢失！</p><p>常见的错误包括不小心把 Windows 的分区删掉了 😥。</p></div><ol start="10"><li>分区完成后，使用 <code>fdisk</code> 或 <code>lsblk</code> 命令复查分区情况：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-XOTai" id="tab-Jug3l6G" checked><label data-title="fdisk" for="tab-Jug3l6G">fdisk</label><input type="radio" name="group-XOTai" id="tab-y0yA6qb"><label data-title="lsblk" for="tab-y0yA6qb">lsblk</label></div><div class="blocks"><div class="language-zsh vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fdisk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 复查磁盘情况</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsblk</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 复查磁盘情况</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p><img src="'+E+'" alt="partition-13"></p><p><img src="'+x+'" alt="partition-14"></p><h3 id="_7-2-格式化并创建-btrfs-子卷" tabindex="-1">7-2. 格式化并创建 Btrfs 子卷 <a class="header-anchor" href="#_7-2-格式化并创建-btrfs-子卷" aria-label="Permalink to &quot;7-2. 格式化并创建 Btrfs 子卷&quot;">​</a></h3><h4 id="_7-2-0-格式化-efi-分区" tabindex="-1">7-2.0. 格式化 EFI 分区 <a class="header-anchor" href="#_7-2-0-格式化-efi-分区" aria-label="Permalink to &quot;7-2.0. 格式化 EFI 分区&quot;">​</a></h4><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-hBZhI" id="tab-KOxxx_k" checked><label data-title="SATA" for="tab-KOxxx_k">SATA</label><input type="radio" name="group-hBZhI" id="tab-k5GYMBn"><label data-title="NVME" for="tab-k5GYMBn">NVME</label></div><div class="blocks"><div class="language-zsh vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfs.fat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F32</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfs.fat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F32</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1pn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>如果目标是双系统（Win10/Win11 + Arch Linux），并且 Win10/Win11 和 Arch Linux 将要共存在一个硬盘上的话，不要重新格式化原有的 EFI 分区，因为它可能包含启动其他操作系统所需的文件。</p></div><h4 id="_7-2-1-格式化-swap-分区" tabindex="-1">7-2-1. 格式化 Swap 分区 <a class="header-anchor" href="#_7-2-1-格式化-swap-分区" aria-label="Permalink to &quot;7-2-1. 格式化 Swap 分区&quot;">​</a></h4><p>通过以下命令格式化对应的 Swap 分区，请按照实际情况替换 <code>x</code> 和 <code>n</code>（下同）：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xzGLv" id="tab-_zwoiwq" checked><label data-title="SATA" for="tab-_zwoiwq">SATA</label><input type="radio" name="group-xzGLv" id="tab-XN-L14q"><label data-title="NVME" for="tab-XN-L14q">NVME</label></div><div class="blocks"><div class="language-zsh vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkswap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkswap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1pn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p><img src="'+w+'" alt="mkswap"></p><h4 id="_7-2-2-格式化-btrfs-分区" tabindex="-1">7-2-2. 格式化 Btrfs 分区 <a class="header-anchor" href="#_7-2-2-格式化-btrfs-分区" aria-label="Permalink to &quot;7-2-2. 格式化 Btrfs 分区&quot;">​</a></h4><ol><li>首先我们需要将整一个分区格式化为 <code>Btrfs</code> 文件系统。使用如下命令进行格式化：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Bec4o" id="tab-dZuF_pz" checked><label data-title="SATA" for="tab-dZuF_pz">SATA</label><input type="radio" name="group-Bec4o" id="tab-WGnOGKp"><label data-title="NVME" for="tab-WGnOGKp">NVME</label></div><div class="blocks"><div class="language-zsh vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfs.btrfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myArch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfs.btrfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myArch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1pn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><blockquote><p>📑 命令参数说明：</p><ul><li><code>-L</code> 选项后指定该分区的 <code>LABLE</code>，这里以 <code>myArch</code> 为例，也可以自定义，但不能使用特殊字符以及空格，且最好有意义</li></ul></blockquote><p><img src="'+A+'" alt="mkbtrfs_step-1"></p><ol start="2"><li>为了创建子卷，我们需要先将 <code>Btrfs</code> 分区挂载到 <code>/mnt</code> 下：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-De-jm" id="tab-_vTRHfQ" checked><label data-title="SATA" for="tab-_vTRHfQ">SATA</label><input type="radio" name="group-De-jm" id="tab-yhjGtUR"><label data-title="NVME" for="tab-yhjGtUR">NVME</label></div><div class="blocks"><div class="language-zsh vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> btrfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compress=zstd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> btrfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compress=zstd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1pn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><blockquote><p>📑 命令参数说明：</p><ul><li><code>-t</code> 选项后指定挂载分区文件系统类型</li><li><code>-o</code> 选项后添加挂载参数： <ul><li><code>compress=zstd</code> —— 开启透明压缩</li></ul></li></ul></blockquote><ol start="3"><li>使用 <code>df</code> 命令复查挂载情况：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">df</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -h 选项会使输出以人类可读的单位显示</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+D+`" alt="mkbtrfs_step-2"></p><h4 id="_7-2-3-创建-btrfs-子卷" tabindex="-1">7-2-3. 创建 Btrfs 子卷 <a class="header-anchor" href="#_7-2-3-创建-btrfs-子卷" aria-label="Permalink to &quot;7-2-3. 创建 Btrfs 子卷&quot;">​</a></h4><ol><li>通过以下命令创建两个 <code>Btrfs</code> 子卷，之后将分别挂载到 <code>/</code> 根目录和 <code>/home</code> 用户主目录：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">btrfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subvolume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/@</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建 / 目录子卷</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">btrfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subvolume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/@home</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建 /home 目录子卷</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+z+'" alt="mkbtrfs_step-3"></p><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>除非你清楚你的操作产生的后果，否则请保持子卷名称和结构与本指南一致，因为在后面我们会设置的快照工具 <code>timeshift</code> 只支持这种子卷布局。</p></div><ol start="2"><li>通过以下命令复查子卷情况：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">btrfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subvolume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+q+'" alt="mkbtrfs_step-4"></p><ol start="3"><li>子卷创建好后，我们需要将 <code>/mnt</code> 卸载掉，以挂载子卷：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">umount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+U+`" alt="mkbtrfs_step-5"></p><h2 id="_8-挂载" tabindex="-1">8. 挂载 <a class="header-anchor" href="#_8-挂载" aria-label="Permalink to &quot;8. 挂载&quot;">​</a></h2><ol><li>在挂载时，挂载是有顺序的，需要从根目录开始挂载。使用如下命令挂载子卷：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-yo4cn" id="tab-egBBsSq" checked><label data-title="SATA" for="tab-egBBsSq">SATA</label><input type="radio" name="group-yo4cn" id="tab-GrK5gtA"><label data-title="NVME" for="tab-GrK5gtA">NVME</label></div><div class="blocks"><div class="language-zsh vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> btrfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subvol=/@,compress=zstd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载 / 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/home</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建 /home 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> btrfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subvol=/@home,compress=zstd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/home</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载 /home 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/boot</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建 /boot 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/boot</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载 /boot 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swapon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载交换分区</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> btrfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subvol=/@,compress=zstd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1pn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载 / 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/home</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建 /home 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> btrfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subvol=/@home,compress=zstd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1pn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/home</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载 /home 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/boot</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建 /boot 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1pn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/boot</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载 /boot 目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swapon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/nvmexn1pn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载交换分区</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div></div><p><img src="`+S+'" alt="mount_step-1"></p><p><img src="'+G+'" alt="mount_step-2"></p><ol start="2"><li>使用 <code>df</code> 命令复查挂载情况：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">df</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+P+'" alt="mount_step-3"></p><ol start="3"><li>使用 <code>free</code> 命令复查 Swap 分区挂载情况：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">free</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -h 选项会使输出以人类可读的单位显示</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+I+`" alt="mount_step-4"></p><h2 id="_9-安装系统" tabindex="-1">9. 安装系统 <a class="header-anchor" href="#_9-安装系统" aria-label="Permalink to &quot;9. 安装系统&quot;">​</a></h2><ol><li>通过如下命令使用 <code>pacstrap</code> 脚本安装基础包：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacstrap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linux-firmware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> btrfs-progs</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果使用btrfs文件系统，额外安装一个btrfs-progs包</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>📑 命令参数说明：</p><ul><li><code>base-devel</code> —— <code>base-devel</code> 在 <code>AUR</code> 包的安装过程中是必须用到的</li><li><code>linux</code> —— 内核软件包，这里建议先不要替换为其它内核</li></ul></blockquote><p><img src="`+R+'" alt="pacstrap_step-1"></p><p>如果提示 GPG 证书错误，可能是因为使用的不是最新的镜像文件，可以通过更新 <code>archlinux-keyring</code> 解决此问题</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> archlinux-keyring</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>通过如下命令使用 <code>pacstrap</code> 脚本安装其它必要的功能性软件：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacstrap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> networkmanager</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh-completions</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>📑 命令参数说明：</p><ul><li><code>zsh</code> —— <code>zsh-completions</code> 如果你是 bash 的爱好者，请把这两个包换成<code>bash-completion</code></li><li>如果你是第一次接触*nix 系统的新手，不建议换成 bash</li></ul></blockquote><p><img src="'+T+'" alt="pacstrap_step-2"></p><p>经过一系列安装时提示信息的刷屏，这些包就安装好了。</p><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>在执行命令前，请仔细检查命令的拼写正确；同时注意不要漏装东西。</p><p>很多人在后续的步骤中报错就是因为这里漏装了东西。</p><p>如果报错，请<strong>检查拼写</strong>，同时请确保之前的步骤 <a href="#_6-更换国内软件仓库镜像源加快下载速度">更换国内软件仓库镜像源加快下载速度</a> 中<strong>没有</strong>添加 <code>archlinuxcn</code> 源。</p></div><h2 id="_10-生成-fstab-文件" tabindex="-1">10. 生成 fstab 文件 <a class="header-anchor" href="#_10-生成-fstab-文件" aria-label="Permalink to &quot;10. 生成 fstab 文件&quot;">​</a></h2><ol><li><code>fstab</code> 用来定义磁盘分区。它是 Linux 系统中重要的文件之一。使用 <code>genfstab</code> 自动根据当前挂载情况生成并写入 <code>fstab</code> 文件：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">genfstab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/etc/fstab</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>复查一下 <code>/mnt/etc/fstab</code> 确保没有错误：</li></ol><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/etc/fstab</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+N+`" alt="fstab"></p><p>若为 NVME 协议的硬盘，输出结果应该与此类似：</p><div class="language-fstab vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">fstab</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># /dev/nvme0n1p6  /  btrfs  rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=256,subvol=/@,subvol=@ 0 0</span></span>
<span class="line highlighted"><span>UUID=d01a3ca5-0798-462e-9a30-97065e7e36e1 /  btrfs  rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=256,subvol=/@,subvol=@  0 0</span></span>
<span class="line"><span></span></span>
<span class="line"><span># /dev/nvme0n1p1  /boot vfat  rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro      0 2</span></span>
<span class="line highlighted"><span>UUID=522C-80C6  /boot vfat  rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro 0 2</span></span>
<span class="line"><span></span></span>
<span class="line"><span># /dev/nvme0n1p6  /home btrfs rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=257,subvol=/@home,subvol=@home 0 0</span></span>
<span class="line highlighted"><span>UUID=d01a3ca5-0798-462e-9a30-97065e7e36e1 /home btrfs rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=257,subvol=/@home,subvol=@home 0 0</span></span>
<span class="line"><span></span></span>
<span class="line"><span># /dev/nvme0n1p5  none  swap  defaults  0 0</span></span>
<span class="line highlighted"><span>UUID=8e40dbed-590f-4cb8-80de-5cef8343a9fc none  swap  defaults  0 0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_11-change-root" tabindex="-1">11. change root <a class="header-anchor" href="#_11-change-root" aria-label="Permalink to &quot;11. change root&quot;">​</a></h2><p>使用以下命令把系统环境切换到新系统下：</p><div class="language-zsh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">zsh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arch-chroot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+M+'" alt="arch-chroot"></p><p>此时，原来安装盘下的 <code>/mnt</code> 目录就变成了新系统的 <code>/</code> 目录。同时，可以发现命令行的提示符颜色和样式也发生了改变。</p><h2 id="_12-设置主机名与时区" tabindex="-1">12. 设置主机名与时区 <a class="header-anchor" href="#_12-设置主机名与时区" aria-label="Permalink to &quot;12. 设置主机名与时区&quot;">​</a></h2><ol><li>首先在 <code>/etc/hostname</code> 设置主机名：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/hostname</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+L+`" alt="set-name-and-timezone_step-1"></p><p>加入你想为主机取的主机名，这里比如叫 myarch。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>主机名不要包含特殊字符以及空格。</p></div><ol start="2"><li>接下来在 <code>/etc/hosts</code> 设置与其匹配的条目：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/hosts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>加入如下内容：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.0.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   localhost</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         localhost</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">127.0.1.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   myarch.localdomain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myarch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+W+'" alt="set-name-and-timezone_step-2"></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>你可以使用 <code>Tab</code> 对齐。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>某些情况下如不设置主机名，在 KDE 下可能会存在网络情况变更时无法启动 GUI 应用的问题，在终端中出现形如 <code>No protocol specified qt.qpa.xcb: could not connect to display</code> 的错误。这种情况极为少见。</p><p>但不管如何，即使没有问题，我们都应该设置好主机名。</p></div><ol start="3"><li>随后设置时区，在 <code>/etc/localtime</code> 下用 <code>/usr</code> 中合适的时区创建符号链接：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/zoneinfo/Asia/Shanghai</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/localtime</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+V+'" alt="set-name-and-timezone_step-3"></p><blockquote><h4 id="🍧-碎碎念" tabindex="-1">🍧 碎碎念 <a class="header-anchor" href="#🍧-碎碎念" aria-label="Permalink to &quot;🍧 碎碎念&quot;">​</a></h4><p>不要找北京啦！这里没有北京，只有上海啦！🚀</p></blockquote><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>同时，你也可以使用其它时区：</p><p><img src="'+O+'" alt="set-name-and-timezone_step-4"></p></div><h2 id="_13-硬件时间设置" tabindex="-1">13. 硬件时间设置 <a class="header-anchor" href="#_13-硬件时间设置" aria-label="Permalink to &quot;13. 硬件时间设置&quot;">​</a></h2><p>使用如下命令将系统时间同步到硬件时间：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hwclock</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --systohc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_14-设置-locale" tabindex="-1">14. 设置 Locale <a class="header-anchor" href="#_14-设置-locale" aria-label="Permalink to &quot;14. 设置 Locale&quot;">​</a></h2><p><code>Locale</code> 决定了软件使用的语言、书写习惯和字符集。</p><ol><li>编辑 <code>/etc/locale.gen</code>，去掉 <code>en_US.UTF-8 UTF-8</code> 以及 <code>zh_CN.UTF-8 UTF-8</code> 行前的注释符号（<code>#</code>）：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/locale.gen</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+X+'" alt="locale_step-1"></p><p><img src="'+$+'" alt="locale_step-2"></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>有几个选项极具迷惑性，请不要取消注释错了。</p></div><ol start="2"><li>然后使用如下命令生成 <code>locale</code>：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locale-gen</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+H+'" alt="locale_step-3"></p><ol start="3"><li>向 <code>/etc/locale.conf</code> 输入内容：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;LANG=en_US.UTF-8&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/locale.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>不推荐在此设置任何中文 <code>locale</code>，会导致 <code>tty</code> 乱码。</p></div><h2 id="_15-为-root-用户设置密码" tabindex="-1">15. 为 root 用户设置密码 <a class="header-anchor" href="#_15-为-root-用户设置密码" aria-label="Permalink to &quot;15. 为 root 用户设置密码&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">passwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+j+`" alt="password"></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>根据提示操作即可。注意输入密码时不会显示哦，不要以为 ⌨ 键盘坏了。</p></div><h2 id="_16-安装微码" tabindex="-1">16. 安装微码 <a class="header-anchor" href="#_16-安装微码" aria-label="Permalink to &quot;16. 安装微码&quot;">​</a></h2><p>通过以下命令安装对应芯片制造商的微码：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> intel-ucode</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Intel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> amd-ucode</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # AMD</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>🎉 恭喜你！这是你在新系统中第一次使用 <code>pacman</code> 软件包管理器安装软件！在这里一路回车完成安装即可。</p><p>如果你不会使用，请参阅 <a href="./.html">这里</a>。</p></div><h2 id="_17-安装引导程序" tabindex="-1">17. 安装引导程序 <a class="header-anchor" href="#_17-安装引导程序" aria-label="Permalink to &quot;17. 安装引导程序&quot;">​</a></h2><p>如有需要可以参阅 <a href="https://wiki.archlinux.org/title/GRUB_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p><ol><li>安装相应的包：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> efibootmgr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> os-prober</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>📑 命令参数说明：</p><ul><li><code>-S</code> 选项后指定要通过 <code>pacman</code> 包管理器安装的包： <ul><li><code>grub</code> —— 启动引导器</li><li><code>efibootmgr</code> —— <code>efibootmgr</code> 被 <code>grub</code> 脚本用来将启动项写入 NVRAM</li><li><code>os-prober</code> —— 为了能够引导 win10，需要安装 <code>os-prober</code> 以检测到它</li></ul></li></ul></blockquote><ol start="2"><li>安装 GRUB 到 EFI 分区：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grub-install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --target=x86_64-efi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --efi-directory=/boot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bootloader-id=ARCH</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>📑 命令参数说明：</p><ul><li><code>--efi-directory=/boot</code> —— 将 <code>grubx64.efi</code> 安装到之前的指定位置（EFI 分区）</li><li><code>--bootloader-id=ARCH</code> —— 取名为 <code>ARCH</code></li></ul></blockquote><p><img src="`+Q+'" alt="grub_step-1"></p><ol start="3"><li>接下来使用 <code>vim</code> 编辑 <code>/etc/default/grub</code> 文件：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/default/grub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>进行如下修改：</p><ul><li>去掉 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 一行中最后的 <code>quiet</code> 参数</li><li>把 <code>loglevel</code> 的数值从 <code>3</code> 改成 <code>5</code>。这样是为了后续如果出现系统错误，方便排错</li><li>加入 <code>nowatchdog</code> 参数，这可以显著提高开关机速度</li></ul><p><img src="'+K+`" alt="grub_step-2"></p><ul><li>为了引导 win10，则还需要添加新的一行 <code>GRUB_DISABLE_OS_PROBER=false</code></li></ul><div class="language-grub vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">grub</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># GRUB boot loader configuration</span></span>
<span class="line"><span></span></span>
<span class="line"><span>GRUB_DEFAULT=0</span></span>
<span class="line"><span>GRUB_TIMEOUT=5</span></span>
<span class="line"><span>GRUB_DISTRIBUTOR=&quot;Arch&quot;</span></span>
<span class="line"><span>GRUB_CMDLINE_LINUX_DEFAULT=&quot;loglevel=5 nowatchdog&quot;</span></span>
<span class="line"><span>GRUB_CMDLINE_LINUX=&quot;&quot;</span></span>
<span class="line highlighted"><span>GRUB_DISABLE_OS_PROBER=false</span></span>
<span class="line"><span>...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p><code>nowatchdog</code> 参数无法禁用英特尔的看门狗硬件，改为 <code>modprobe.blacklist=iTCO_wdt</code> 即可。如有需要可以参考 <a href="https://wiki.archlinuxcn.org/wiki/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96#%E7%9C%8B%E9%97%A8%E7%8B%97" target="_blank" rel="noreferrer">ArchWiki 对应内容</a></p></div><ol start="4"><li>最后生成 <code>GRUB</code> 所需的配置文件：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grub-mkconfig</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /boot/grub/grub.cfg</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+J+'" alt="grub_step-3"></p><p>若引导了 win10，则输出应该包含倒数第二行：</p><p><img src="'+Y+`" alt="os-prober-1"></p><p>若 win10 安装在另一个硬盘中则不会输出 可在进入系统后挂载硬盘并重新执行该命令</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>1.在某些主板安装完成后，你会发现没有启动条目。这是因为某些主板的 UEFI 固件在显示 UEFI NVRAM 引导条目之前，需要在特定的位置存放可引导文件，不支持自定义存放 <code>efi</code> 文件（如微星 Z170-A Gaming PRO）。解决方案是在默认启动路径下安装 <code>GRUB</code>。重新插入安装优盘，按原先顺序挂载目录（不需要再次创建文件夹了），<code>chroot</code> 到 <code>/mnt</code>，然后你可以重新用 <code>--removable</code> 安装grub2，如下命令所示。只有安装完成后你的主板不出现启动条目才需要尝试如下命令，正常安装无需执行。如有需要可以参考 <a href="https://wiki.archlinuxcn.org/wiki/GRUB#%E7%BC%BA%E7%9C%81/%E5%90%8E%E5%A4%87%E5%90%AF%E5%8A%A8%E8%B7%AF%E5%BE%84" target="_blank" rel="noreferrer">ArchWiki 对应内容</a>。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grub-install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --target=x86_64-efi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --efi-directory=/boot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bootloader-id=ARCH</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --removable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>2.<code>os-prober</code> 在 chroot 环境中可能无法正常运作。如果遇到这种情况，重启并引导进入系统后再次尝试生成配置文件。</p></div><h2 id="_18-完成安装" tabindex="-1">18. 完成安装 <a class="header-anchor" href="#_18-完成安装" aria-label="Permalink to &quot;18. 完成安装&quot;">​</a></h2><ol><li>输入以下命令：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exit</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 退回安装环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">umount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 卸载新分区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reboot</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 重启</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+Z+'" alt="finish-install"></p><p>注意，<strong>重启前要先拔掉优盘</strong>，否则你重启后还是进安装程序而不是安装好的系统。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>虚拟机直接重启即可。</p></div><p><img src="'+ss+'" alt="last-step-1"></p><p>如图即为 GRUB 引导界面。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>若引导了 win10 也会显示出来。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>若 win10 分区使用了 🔐 Bitlocker 加密，则第一次从 GRUB 进入需要输入解锁密钥。</p><p>你应该在步骤 <a href="./pre-install.html#_5-获取-bitlocker-恢复密钥">5. 获取 Bitlocker 恢复密钥</a> 中已经知晓了 Bitlocker 解锁密钥。</p><p>若无法从 <a href="https://aka.ms/myrecoverykey" target="_blank" rel="noreferrer">aka.ms 相关页面</a> 获取解锁密钥，请尝试在 BIOS 中将 Windows Boot Manager 移动到启动顺序首位再尝试进入 win10。</p></div><ol start="2"><li>重启后使用 root 账户登录系统：</li></ol><p><img src="'+is+`" alt="last-step-2"></p><ol start="3"><li>设置开机自启并立即启动 networkmanager 服务，即可连接网络：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NetworkManager</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 设置开机自启并立即启动 NetworkManager 服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ping</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> www.bilibili.com</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 测试网络连接</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+as+`" alt="last-step-3"></p><ol start="4"><li>若为无线连接，则需要在启动 <code>networkmanager</code> 后使用 <code>nmcli</code> 连接网络：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmcli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wifi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 显示附近的 Wi-Fi 网络</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmcli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wifi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connect</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Wi-Fi名（SSID）&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> password</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;网络密码&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 连接指定的无线网络</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>也可以使用 <code>nmtui</code> 来配置网络</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nmtui</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>neofetch 原作者 dylanaraps 已于 2024 年 04 月 26 日归档 neofetch 仓库，在下面我们会使用 <code>fastfetch</code> 代替 <code>neofetch</code>。</p></div><ol start="5"><li><code>fastfetch</code> 可以将系统信息和发行版 logo 一并打印出来。通过 <code>pacman</code> 安装 <code>fastfetch</code>：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fastfetch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用 <code>fastfetch</code> 打印系统信息：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fastfetch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+es+`" alt="fastfetch"></p><blockquote><h4 id="🍧-碎碎念-1" tabindex="-1">🍧 碎碎念 <a class="header-anchor" href="#🍧-碎碎念-1" aria-label="Permalink to &quot;🍧 碎碎念&quot;">​</a></h4><p>又到了 <code>fastfetch</code> 的时间了吗？</p></blockquote><h2 id="🎉-祝贺-🎉" tabindex="-1">🎉 祝贺！🎉 <a class="header-anchor" href="#🎉-祝贺-🎉" aria-label="Permalink to &quot;🎉 祝贺！🎉&quot;">​</a></h2><p>到此为止，一个基础的、无图形界面的 archlinux 已经安装完成了！这时你应该可以感到满满的满足感（即使你还没有见到图形化的界面）。好好享受一下成功安装 archlinux 的喜悦吧！</p><p>如果你对本节的部分步骤不理解，请仔细阅读下一节 <a href="./basic-install-detail.html">基础安装详解</a>。在此之后，我们来安装图形界面。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>你可以使用以下命令关机：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shutdown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> now</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">poweroff</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>archlinux 在 2021 年 4 月在安装镜像中内置了一个 <a href="https://archlinux.org/packages/extra/any/archinstall/" target="_blank" rel="noreferrer">安装脚本</a>，类似一个一键安装脚本，提供一些选项，即可快速安装（填问卷安系统）。和所有一键安装脚本类似，提供自动化，但不灵活的安装过程。缺陷包括但不限于：</p><ol><li>只提供有限的文件系统格式</li><li>只可限定在一个磁盘</li><li>不能指定软件仓库镜像源</li><li>只提供有限的桌面选择</li><li>自动分区不可手动干预</li><li>输入错误直接崩溃退出</li><li>仅支持 UEFI 等</li></ol><p>不建议使用这个安装脚本，除了以上各种原因，初学者也无法在这种安装过程中学到任何东西。如果你因为某些原因需要快速启动一个基础的 archlinux 环境，那么可以尝试此脚本。</p></div>`,260)]))}const bs=e(ns,[["render",ls]]);export{ks as __pageData,bs as default};
