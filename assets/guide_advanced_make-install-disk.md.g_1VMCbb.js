import{_ as a,c as n,o as e,ag as l}from"./chunks/framework.CDhRSyRB.js";const t="/assets/ventoy-1.MwlYjYt4.png",p="/assets/ventoy-2.DxLUbzzD.png",h="/assets/ventoy-3.B51i5LBL.png",r="/assets/ventoy-4.ZJPHaNh_.png",d="/assets/ventoy-5.CSfs4XO_.png",o="/assets/ventoy-6.CgIL_DJ9.png",c="/assets/ventoy-7.DMo42DN_.png",k="/assets/balena-etcher-1.BEYRQyO5.png",b="/assets/balena-etcher-2.BxfxfAqu.png",u="/assets/win-1.BqcgfWt5.png",g="/assets/win-2.ttY-J7X7.png",F="/assets/win-3.C3rl0aWG.png",m="/assets/win-4.CTsKyA9A.png",y="/assets/win-5.y5qvcbMg.png",v="/assets/win-6.B3h-_YpZ.png",C="/assets/win-7.KtVZ2P1x.png",B="/assets/win-8.BQ_n-DtA.png",E="/assets/archiso-1.C5nttdcG.png",f="/assets/archiso-2.CXnlxHqw.png",_="/assets/archiso-3.CO07xlEZ.png",x="/assets/archiso-4.PftcbsIq.png",w="/assets/archiso-5.B5Ai2sH5.png",A="/assets/archiso-6.D9lrbqox.png",D="/assets/archiso-7.BgFnUcyj.png",q="/assets/archiso-8.HapC3oDZ.png",U="/assets/archiso-9.cGvJpp57.png",i="/assets/archiso-10.DlyN9cUn.png",W=JSON.parse('{"title":"制作系统盘","description":"","frontmatter":{},"headers":[],"relativePath":"guide/advanced/make-install-disk.md","filePath":"guide/advanced/make-install-disk.md","lastUpdated":1719757770000}'),P={name:"guide/advanced/make-install-disk.md"};function I(V,s,S,T,M,G){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="制作系统盘" tabindex="-1">制作系统盘 <a class="header-anchor" href="#制作系统盘" aria-label="Permalink to &quot;制作系统盘&quot;">​</a></h1><blockquote><h3 id="🥀-落红不是无情物-化作春泥更护花" tabindex="-1">🥀 落红不是无情物，化作春泥更护花 <a class="header-anchor" href="#🥀-落红不是无情物-化作春泥更护花" aria-label="Permalink to &quot;🥀 落红不是无情物，化作春泥更护花&quot;">​</a></h3><p>本节介绍在 archlinux 下如何制作系统安装盘（启动盘）以及用来维护的 archlinux 内存系统盘（也就是将 archlinux 安装到 U 盘里）</p></blockquote><h2 id="通用方法" tabindex="-1">通用方法 <a class="header-anchor" href="#通用方法" aria-label="Permalink to &quot;通用方法&quot;">​</a></h2><h3 id="ventoy-推荐" tabindex="-1">Ventoy（推荐） <a class="header-anchor" href="#ventoy-推荐" aria-label="Permalink to &quot;Ventoy（推荐）&quot;">​</a></h3><p><a href="https://www.ventoy.net/cn/index.html" target="_blank" rel="noreferrer">Ventoy</a><sup>cn / aur</sup> 是一个制作可启动 U 盘的开源工具。</p><p>Ventoy 有诸多优点：</p><ul><li><strong>无需反复地格式化 U 盘</strong>，只需要把 ISO / WIM / IMG / VHD(x) / EFI 等类型的文件拷贝到 U 盘里面就可以启动了，无需其它操作</li><li>可以一次性拷贝多个不同类型的镜像文件，Ventoy 会在启动时显示一个菜单来供用户进行选择</li><li>同一个 U 盘可以同时支持 x86 Legacy BIOS、IA32 UEFI、x86_64 UEFI、ARM64 UEFI 和 MIPS64EL UEFI 模式</li></ul><p>Ventoy 支持 <a href="https://www.ventoy.net/cn/isolist.html" target="_blank" rel="noreferrer">大部分常见类型的操作系统</a>。</p><p>安装 Ventoy：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-WThZ7" id="tab--ynuscK" checked><label data-title="cn" for="tab--ynuscK">cn</label><input type="radio" name="group-WThZ7" id="tab-vwWYdej"><label data-title="aur" for="tab-vwWYdej">aur</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ventoy-bin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aur/ventoy-bin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h4 id="命令行模式" tabindex="-1">命令行模式 <a class="header-anchor" href="#命令行模式" aria-label="Permalink to &quot;命令行模式&quot;">​</a></h4><ol><li><p>制作 Ventoy U 盘：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsblk</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 分辨要安装 Ventoy 的 U 盘</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ventoy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> size</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 按提示操作即可</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ventoy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 显示 U 盘中的 Ventoy 相关信息</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>📑 命令参数说明：</p><ul><li><code>-i</code> —— 安装 Ventoy 到 U 盘中（如果对应磁盘已经安装了 Ventoy 则会返回失败）</li><li><code>-g</code> —— 使用 GPT 分区格式，默认是 MBR 格式</li><li><code>-r</code> —— 在 U 盘最后保留部分空间（可选，可以分区并格式化后使用）： <ul><li><code>size</code> —— 空间大小（单位是 MB）</li></ul></li></ul></blockquote><p><img src="`+t+'" alt="ventoy-1"></p><p><img src="'+p+`" alt="ventoy-2"></p><div class="danger custom-block"><p class="custom-block-title">☢️ 警告</p><p>Ventoy 不会检查输入的设备是 U 盘还是本地硬盘，如果输错了有可能会把系统盘格式化掉！</p></div><div class="danger custom-block"><p class="custom-block-title">☢️ 警告</p><p>安装 Ventoy 到 U 盘会使 U 盘所有数据丢失，请事先确认。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>可用选项 <code>-I</code> 强制安装 Ventoy 到 U 盘中：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ventoy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> size</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>可用以下命令升级 U 盘中已经安装好的 Ventoy：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ventoy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></li><li><p>拷贝镜像文件到镜像分区（卷标为 <code>Ventoy</code>）：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsblk</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 分辨镜像分区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载镜像分区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_os.iso</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -hl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 复查一下</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="`+h+'" alt="ventoy-3"></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>你可以将多个镜像文件拷贝到镜像分区。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>也可以在 Dolphin 文件管理器中挂载并复制。</p></div></li></ol><p>自此，一个支持多系统的安装盘便制作完成了。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>将 U 盘剩余空间创建新分区并格式化即可使用：</p><ol><li><p>类似 <a href="./../rookie/basic-install.html#_7-1-分区">7-1. 分区</a>，用 <code>cfdisk</code> 命令创建新分区。在 <code>Type</code> 中选择 <code>Microsoft 储存空间</code>（NTFS）：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cfdisk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+r+'" alt="ventoy-4"></p></li><li><p>格式化分区：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkfs.ntfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -f：快速格式化</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+d+'" alt="ventoy-5"></p></li></ol><p>也可以使用图形化的分区工具如 <a href="https://apps.kde.org/partitionmanager/" target="_blank" rel="noreferrer">KDE 分区管理器</a>。</p></div><h4 id="图形化模式" tabindex="-1">图形化模式 <a class="header-anchor" href="#图形化模式" aria-label="Permalink to &quot;图形化模式&quot;">​</a></h4><ol><li><p>打开 Ventoy 基于浏览器的图形化操作界面：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ventoyweb</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+o+'" alt="ventoy-6"></p></li><li><p>使用浏览器访问提示的本地端口即可：</p><p><img src="'+c+'" alt="ventoy-7"></p></li><li><p>按照界面提示完成操作即可，在终端按下 <code>Ctrl</code> + <code>C</code> 即可退出</p></li></ol><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>目前 Linux 下 Ventoy 图形化模式还不太稳定，有可能制作失败。建议使用命令行模式。</p></div><h3 id="balenaetcher" tabindex="-1">balenaEtcher <a class="header-anchor" href="#balenaetcher" aria-label="Permalink to &quot;balenaEtcher&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>此方法<strong>不适用于制作 Windows 安装盘</strong>。</p></div><p><a href="https://www.balena.io/etcher/" target="_blank" rel="noreferrer">balenaEtcher</a><sup>aur</sup> 界面更加傻瓜一点。但是只支持对单个完整 U 盘进行制作，即使还有剩余的空间也无法使用。</p><p>1.安装 balenaEtcher：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-xHi3n" id="tab-27J8sDG" checked><label data-title="aur" for="tab-27J8sDG">aur</label><input type="radio" name="group-xHi3n" id="tab-0TeZgyr"><label data-title="aur (git)" for="tab-0TeZgyr">aur (git)</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> etcher-bin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> etcher-git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p><img src="'+k+'" alt="balena-etcher-1"></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p><a href="https://aur.archlinux.org/packages/balena-etcher" target="_blank" rel="noreferrer"><code>balena-etcher</code></a> 打开后会白屏，无法正常使用。 请安装 <a href="https://aur.archlinux.org/packages/etcher-bin/" target="_blank" rel="noreferrer"><code>etcher-bin</code></a> 或 <a href="https://aur.archlinux.org/packages/etcher-git/" target="_blank" rel="noreferrer"><code>etcher-git</code></a>。</p></div><p>2.打开 balenaEtcher，按提示操作即可： <img src="'+b+`" alt="balena-etcher-2"></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>使用 balenaEtcher 制作完成的安装盘若要重新作为普通 U 盘使用，需要用磁盘分区管理工具（如 <a href="https://apps.kde.org/partitionmanager/" target="_blank" rel="noreferrer">KDE 分区管理器</a>、<a href="https://www.diskgenius.cn/" target="_blank" rel="noreferrer">DiskGenius</a><sup>EULA</sup>）重建分区表才能正常格式化。</p></div><h2 id="手动制作" tabindex="-1">手动制作 <a class="header-anchor" href="#手动制作" aria-label="Permalink to &quot;手动制作&quot;">​</a></h2><h3 id="dd-命令" tabindex="-1">dd 命令 <a class="header-anchor" href="#dd-命令" aria-label="Permalink to &quot;dd 命令&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>此方法<strong>不适用于制作 Windows 安装盘</strong>。</p></div><p><code>dd</code> 命令用于读取、转换并输出数据。</p><p>使用 <code>dd</code> 命令即可简单的制作 Linux 的安装盘。注意 <code>of</code> 的参数为 <code>sdx</code>，不是 <code>sdx1</code>、<code>sdx2</code> 等：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bs=4M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if=/path/of/some_os.iso</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of=/dev/sdx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status=progress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oflag=sync</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>📑 命令参数说明：</p><ul><li><code>bs=4M</code> —— 指定一个较为合理的文件输入输出块大小</li><li><code>status=progress</code> —— 用来输出刻录过程总的信息</li><li><code>oflag=sync</code> —— 用来控制写入数据时的行为特征。确保命令结束时数据及元数据真正写入磁盘，而不是刚写入缓存就返回</li></ul></blockquote><div class="danger custom-block"><p class="custom-block-title">☢️ 警告</p><p>此步骤会使 U 盘所有数据丢失，请事先确认。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>此时 U 盘应该未挂载。若已经挂载了请先卸载掉：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> umount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h3 id="win10-win11-安装盘" tabindex="-1">win10 / win11 安装盘 <a class="header-anchor" href="#win10-win11-安装盘" aria-label="Permalink to &quot;win10 / win11 安装盘&quot;">​</a></h3><p>以往在 Linux 下手动制作一个 win10 / win11 安装盘还是很简单的，但是随着近几年微软的更新，其 iso 安装镜像中存在一个名为<code>install.wim</code>的文件，其大小已经超出了 4GB（fat32 要求的单个文件最大 4GB）的限制。这使得必须用额外的步骤才能制作一个启动盘。</p><p>这里依旧使用 fat32 格式是因为其兼容性是最好的，NTFS 的 UEFI 安装盘很多情况下不被识别。</p><ol><li><p>首先用 <code>parted</code> 命令创建 U 盘的分区：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parted</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 执行 parted，进行磁盘类型变更</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mktable</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 输入 mktable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">新的磁盘卷标类型？</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpt</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 输入 gpt，将磁盘类型转换为 GPT 类型。如磁盘有数据会警告，输入 Yes 即可</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">quit</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 退出 parted 命令行交互</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="`+u+'" alt="win-1"></p><div class="danger custom-block"><p class="custom-block-title">☢️ 警告</p><p>重建分区表会使 U 盘所有数据丢失，请事先确认。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>也可以使用图形化的分区工具如 <a href="https://apps.kde.org/partitionmanager/" target="_blank" rel="noreferrer">KDE 分区管理器</a>。</p></div></li><li><p>接下来类似 <a href="./../rookie/basic-install.html#_7-1-分区">7-1. 分区</a>，用 <code>cfdisk</code> 命令创建新分区。在 <code>Type</code> 中选择 <code>Microsoft 基本数据</code>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cfdisk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdx</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+g+'" alt="win-2"></p></li><li><p>接下来使用 <code>mkfs.vfat</code> 命令格式化所创建的分区，这样 U 盘就准备好了：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkfs.vfat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+F+'" alt="win-3"></p></li><li><p>接下来下载 win10 / win11 的 iso 镜像并解压。由于 Ark 尚不支持 UDF 文件系统的 ISO 文件，我们需要手动挂载并将其中的内容复制出来：</p><p><img src="'+m+`" alt="win-4"></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/windows_iso_name.iso</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+y+`" alt="win-5"></p></li><li><p>得到复制出来的文件后，最后要进行的就是压缩 <code>install.wim</code> 文件（在 <code>sources</code> 文件夹下）。这里需要首先安装一个包 <a href="https://archlinux.org/packages/extra/x86_64/wimlib/" target="_blank" rel="noreferrer"><code>wimlib</code></a>（可能已经作为依赖安装了）：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wimlib</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>接下来进行压缩。这一步会持续较长时间，耐心等待。完成后可以看到文件已经被压缩到了 3.x GB：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/sources</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wimlib-imagex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimize</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.wim</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --solid</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -hl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install.wim</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+v+`" alt="win-6"></p></li><li><p>最后把全部文件复制到 U 盘中即可：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> umount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 卸载掉镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdxn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 挂载 U 盘</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/media</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 复制全部文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+C+`" alt="win-7"></p></li><li><p>复查一下并卸载 U 盘：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -hl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 复查一下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> umount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/mount_point</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 卸载 U 盘</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+B+'" alt="win-8"></p></li></ol><p>自此，一个 win10 / win11 安装盘便制作完成了。</p><h2 id="制作-archlinux-内存系统盘" tabindex="-1">制作 archlinux 内存系统盘 <a class="header-anchor" href="#制作-archlinux-内存系统盘" aria-label="Permalink to &quot;制作 archlinux 内存系统盘&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>此处内容待核实。</p></div><blockquote><p>🔗 相关链接：</p><p>如有需要可参阅 <a href="https://wiki.archlinux.org/title/Archiso_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p></blockquote><p><a href="https://archlinux.org/packages/extra/any/archiso/" target="_blank" rel="noreferrer">Archiso</a><sup>extra / aur</sup> 是自动化制作最新版 archlinux 镜像的工具集，可用于制作定制化的 archlinux 镜像。</p><h3 id="_1-准备工作" tabindex="-1">1. 准备工作 <a class="header-anchor" href="#_1-准备工作" aria-label="Permalink to &quot;1. 准备工作&quot;">​</a></h3><ol><li>首先安装 Archiso 相关包：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-X8oD0" id="tab-XMcAUWU" checked><label data-title="extra" for="tab-XMcAUWU">extra</label><input type="radio" name="group-X8oD0" id="tab-pUfaxsG"><label data-title="aur (git)" for="tab-pUfaxsG">aur (git)</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> archiso</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> archiso-git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p><img src="'+E+`" alt="archiso-1"></p><ol start="2"><li><p>复制 <code>releng</code> 配置方案到合适位置：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/archiso/configs/releng</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/archlinux_live</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/archlinux_live</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 进入目录</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+f+'" alt="archiso-2"></p><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>务必使用 root 权限操作（使用 <code>sudo</code> 提权），否则可能造成问题。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>Archiso 提供了两种配置方案：</p><ul><li><code>baseline</code> —— 只包含基本系统（只包括从介质启动实时环境所需的最低限度的软件包）</li><li><code>releng</code> —— 可以制作定制镜像（用于创建正式的每月安装镜像，可以作为创建自定义镜像的起点）</li></ul><p>显然，这里我们使用 <code>releng</code> 配置方案。</p></div></li></ol><h3 id="_2-进行定制" tabindex="-1">2. 进行定制 <a class="header-anchor" href="#_2-进行定制" aria-label="Permalink to &quot;2. 进行定制&quot;">​</a></h3><p>首先了解下各个文件的用途：</p><p><img src="'+_+`" alt="archiso-3"></p><ul><li><code>packages.x86_64</code> —— 一份要安装在 Live 系统镜像的软件包列表，一行一个</li><li><code>pacman.conf</code> —— Pacman 的配置文件</li><li><code>airootfs</code> —— Live 系统的 rootfs（根文件系统，遵循 rootfs 的目录规则）。除了安装的包之外，其它的定制（包括启动执行脚本等）都在这里</li><li><code>efiboot</code> / <code>syslinux</code> —— 用于设置 BIOS / EFI 启动的配置</li></ul><ol><li><p>编辑 <code>pacman.conf</code> 配置文件：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/archlinux_live/pacman.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在文档结尾处加入下面的文字，来添加 <code>archlinuxcn</code> 源。推荐的镜像源（选一个即可）也一并列出：</p><div class="language-conf vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">conf</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[archlinuxcn]</span></span>
<span class="line highlighted"><span>Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch # 中国科学技术大学开源镜像站</span></span>
<span class="line"><span>Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch # 清华大学开源软件镜像站</span></span>
<span class="line"><span>Server = https://mirrors.hit.edu.cn/archlinuxcn/$arch # 哈尔滨工业大学开源镜像站</span></span>
<span class="line"><span>Server = https://repo.huaweicloud.com/archlinuxcn/$arch # 华为开源镜像站</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>去掉 <code>[multilib]</code> 一节中两行的注释，来开启 32 位库支持：</p><p><img src="`+x+`" alt="archiso-4"></p></li><li><p>然后修改 <code>packages.x86_64</code>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages.x86_64</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在文档结尾处加入 <code>archlinuxcn-keyring</code> 和其它需要预安装的包（根据喜好自定义）：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># custom</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">archlinuxcn-keyring</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">htop</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 系统监控与进程管理软件（top 的升级版）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bashtop</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 系统监控与进程管理软件（top 的豪华升级版）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iftop</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 流量监控工具</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iotop</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 磁盘 I/O 监控工具</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ipmitool</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 用于管理和配置，支持智能平台管理接口（IPMI）1.5 版和 2.0 版规范的设备的实用程序（给运维用的）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fastfetch</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 打印系统信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">plasma-meta</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konsole</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dolphin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ntfs-3g</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">partitionmanager</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # KDE 分区管理器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adobe-source-han-serif-cn-fonts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wqy-zenhei</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">noto-fonts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">noto-fonts-cjk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">noto-fonts-emoji</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">noto-fonts-extra</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firefox</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ark</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gwenview</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeshift</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mesa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lib32-mesa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vulkan-intel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lib32-vulkan-intel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cowsay</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><img src="`+w+`" alt="archiso-5"></p></li><li><p>可选向镜像里添加文件：</p><ul><li><code>airootfs</code> —— 看作是 Live 系统上的 &#39;/&#39; 根目录，在此中存放文件将覆盖或复制到对应的位置</li><li><code>airootfs/etc/skel</code> —— 在 root 用户主目录里放置文件的方法有些许不同。不要把它们放在 <code>airootfs/home</code>，而是放置在此处</li></ul><p>以 <code>/root/.zshrc</code> 为例：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/archlinux_live/airootfs/etc/skel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/archlinux_live/airootfs/etc/skel/.zshrc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+A+'" alt="archiso-6"></p><p>添加以下内容：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;archlinux 简明指南&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cowsay</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+D+'" alt="archiso-7"></p><blockquote><h4 id="🔗-相关链接" tabindex="-1">🔗 相关链接 <a class="header-anchor" href="#🔗-相关链接" aria-label="Permalink to &quot;🔗 相关链接&quot;">​</a></h4><p>如有需要可参阅 <a href="https://wiki.archlinux.org/title/Archiso_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E5%90%91%E6%98%A0%E5%83%8F%E9%87%8C%E6%B7%BB%E5%8A%A0%E6%96%87%E4%BB%B6" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p></blockquote></li><li><p>配置登录管理器：</p><ol><li><p>启用登录管理器的 systemd 服务来做到在引导时启动 X：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/lib/systemd/system/sddm.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/archlinux_live/airootfs/etc/systemd/system/display-manager.service</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+q+'" alt="archiso-8"></p></li><li><p>为了让图形环境在启动过程中自动启动，创建并编辑 <code>airootfs/root/customize_airootfs.sh</code>：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/of/some_folder/archlinux_live/airootfs/root/customize_airootfs.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>添加以下内容：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set-default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> graphical.target</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+U+'" alt="archiso-9"></p></li></ol></li></ol><h3 id="_3-开始制作" tabindex="-1">3. 开始制作 <a class="header-anchor" href="#_3-开始制作" aria-label="Permalink to &quot;3. 开始制作&quot;">​</a></h3><ol><li><p>创建工作目录和输出目录：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/work</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/out</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+i+'" alt="archiso-10"></p></li><li><p>开始制作镜像文件：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkarchiso</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/work</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/out</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/profile/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+i+'" alt="archiso-10"></p></li><li><p>根据前述方法 <a href="./make-install-disk.html#ventoy-推荐">Ventoy（推荐）</a>、<a href="./make-install-disk.html#balenaetcher">balenaEtcher</a> 或 <a href="./advanced/make-install-disk.html#dd-命令">dd 命令</a> 将镜像制作为 archlinux 内存系统盘即可</p></li></ol><blockquote><p>📔 本节参考资料：</p><ul><li><a href="https://blog.phoenixlzx.com/2018/12/14/bootable-archlinux-in-memory-rescue-system/" target="_blank" rel="noreferrer">制作 Arch Linux 内存系统启动盘</a>（知识共享署名-相同方式共享 4.0 国际许可协议）</li></ul></blockquote>',57)]))}const z=a(P,[["render",I]]);export{W as __pageData,z as default};
