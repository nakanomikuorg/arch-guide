import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.CDhRSyRB.js";const l="/assets/optimus-manager-1.BL0Hwnex.png",n="/assets/steam-id-1.BEnoXG4M.png",p="/assets/steam-id-2.CcbC9B0s.png",r="/assets/bbswitch.NNJLDyLr.png",h="/assets/off-check.ByqXvRgb.png",d="/assets/glxgears-1.CTmQEoe0.png",o="/assets/glxgears-2.DyyyEup8.png",c="/assets/glmark2-1.BAXwIukj.png",k="/assets/glmark2-2.OIfvNw4Q.png",g="/assets/unigine-heaven-1.CpCCm0M0.png",u="/assets/unigine-heaven-2.C91N3_9d.png",x=JSON.parse('{"title":"archlinux 显卡驱动","description":"","frontmatter":{},"headers":[],"relativePath":"guide/rookie/graphic-driver.md","filePath":"guide/rookie/graphic-driver.md","lastUpdated":1756764201000}'),b={name:"guide/rookie/graphic-driver.md"};function m(F,s,v,y,C,E){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="archlinux-显卡驱动" tabindex="-1">archlinux 显卡驱动 <a class="header-anchor" href="#archlinux-显卡驱动" aria-label="Permalink to &quot;archlinux 显卡驱动&quot;">​</a></h1><blockquote><h3 id="🪁-接天莲叶无穷碧-映日荷花别样红" tabindex="-1">🪁 接天莲叶无穷碧，映日荷花别样红 <a class="header-anchor" href="#🪁-接天莲叶无穷碧-映日荷花别样红" aria-label="Permalink to &quot;🪁 接天莲叶无穷碧，映日荷花别样红&quot;">​</a></h3><p>近年来，archlinux 的显卡驱动安装已经变得非常容易。本小节区分集成显卡、独立显卡和双显卡（集显 + 独显）三大类讨论 archlinux 显卡驱动的安装</p></blockquote><blockquote><h3 id="🔖-这一节将会讨论" tabindex="-1">🔖 这一节将会讨论： <a class="header-anchor" href="#🔖-这一节将会讨论" aria-label="Permalink to &quot;🔖 这一节将会讨论：&quot;">​</a></h3><details class="details custom-block"><summary>目录</summary><nav class="table-of-contents"><ul><li><a href="#集成显卡">集成显卡</a><ul><li><a href="#intel-核芯显卡">Intel 核芯显卡</a></li><li><a href="#amd-集成显卡">AMD 集成显卡</a></li></ul></li><li><a href="#独立显卡">独立显卡</a><ul><li><a href="#nvidia-独立显卡">NVIDIA 独立显卡</a></li><li><a href="#amd-独立显卡">AMD 独立显卡</a></li></ul></li><li><a href="#双显卡-集显-独显">双显卡（集显 + 独显）</a><ul><li><a href="#nvidia-独立显卡-1">NVIDIA 独立显卡</a></li><li><a href="#amd-独立显卡-1">AMD 独立显卡</a></li></ul></li><li><a href="#性能测试">性能测试</a><ul><li><a href="#glxgears">glxgears</a></li><li><a href="#glmark2">glmark2</a></li><li><a href="#unigine-benchmark">Unigine benchmark</a></li></ul></li><li><a href="#显卡信息查看">显卡信息查看</a><ul><li><a href="#nvidia-独立显卡-2">NVIDIA 独立显卡</a></li><li><a href="#amd-独立显卡-集成显卡">AMD 独立显卡 / 集成显卡</a></li></ul></li></ul></nav></details></blockquote><p>所有 AMD 显卡建议使用开源驱动，英伟达显卡建议使用闭源驱动。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>进行本小节内容时建议按照步骤 <a href="./desktop-env-and-app.html#_12-设置-timeshift-快照">12. 设置 Timeshift 快照</a> 设置了 Timeshift 快照，并且已经有至少一张快照。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>虚拟机不需要安装显卡驱动。</p></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>若在设置过程中导致黑屏无法进入桌面，请尝试使用使用 <code>Ctrl</code> + <code>Alt</code> + <code>F1 ~ F6</code> 在 <code>tty1 ~ tty6</code> 之间切换。</p><p>将导致黑屏的配置删掉或使用快照恢复后重新启动电脑。</p></div><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p>请确保已经按照本指南之前的章节安装配置好系统再向下进行，<strong>不要多个教程混着看（尤其是一些过时的教程）</strong>。因为可能导致漏掉本指南前置步骤中的某些操作，从而造成问题。</p></div><h2 id="集成显卡" tabindex="-1">集成显卡 <a class="header-anchor" href="#集成显卡" aria-label="Permalink to &quot;集成显卡&quot;">​</a></h2><h3 id="intel-核芯显卡" tabindex="-1">Intel 核芯显卡 <a class="header-anchor" href="#intel-核芯显卡" aria-label="Permalink to &quot;Intel 核芯显卡&quot;">​</a></h3><p>如有需要可以参阅 <a href="https://wiki.archlinux.org/index.php/Intel_graphics" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p><p>通过以下命令安装如下几个包即可：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mesa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-mesa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vulkan-intel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-vulkan-intel</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>不建议安装 <code>xf86-video-intel</code>，而应使用 Xorg 的 modesetting 驱动（也就是什么都不用装的意思）</p><p>注意，只有 Intel HD 4000 及以上的集显才支持 vulkan。</p></div><h3 id="amd-集成显卡" tabindex="-1">AMD 集成显卡 <a class="header-anchor" href="#amd-集成显卡" aria-label="Permalink to &quot;AMD 集成显卡&quot;">​</a></h3><p>如有需要可以参阅 <a href="https://wiki.archlinux.org/title/ATI" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p><h4 id="选择驱动" tabindex="-1">选择驱动 <a class="header-anchor" href="#选择驱动" aria-label="Permalink to &quot;选择驱动&quot;">​</a></h4><p>对于具有集成显卡的 AMD 处理器，需要先确定集显架构（Architecture）是什么，再决定安装什么驱动。</p><p>推荐在 <a href="https://www.techpowerup.com/" target="_blank" rel="noreferrer">TECHPOWERUP</a> 进行查询，信息非常全面。在确定了显卡架构后，再根据架构对照下表决定安装什么驱动。</p><table tabindex="0"><thead><tr><th style="text-align:center;">GPU 架构</th><th style="text-align:center;">Radeon 显卡</th><th style="text-align:center;">开源驱动</th><th style="text-align:center;">非开源驱动</th></tr></thead><tbody><tr><td style="text-align:center;">GCN 4 及之后</td><td style="text-align:center;">多种*</td><td style="text-align:center;">AMDGPU*</td><td style="text-align:center;">AMDGPU PRO*</td></tr><tr><td style="text-align:center;">GCN 3</td><td style="text-align:center;">多种</td><td style="text-align:center;">AMDGPU</td><td style="text-align:center;">AMDGPU PRO</td></tr><tr><td style="text-align:center;">GCN 2</td><td style="text-align:center;">多种</td><td style="text-align:center;">AMDGPU/ ATI*</td><td style="text-align:center;">不支持</td></tr><tr><td style="text-align:center;">GCN 1</td><td style="text-align:center;">多种</td><td style="text-align:center;">AMDGPU / ATI</td><td style="text-align:center;">不支持</td></tr><tr><td style="text-align:center;">TeraScale 2&amp;3</td><td style="text-align:center;">HD 5000 - HD 6000</td><td style="text-align:center;">ATI</td><td style="text-align:center;">不支持</td></tr><tr><td style="text-align:center;">TeraScale 1</td><td style="text-align:center;">HD 2000 - HD 4000</td><td style="text-align:center;">ATI</td><td style="text-align:center;">不支持</td></tr><tr><td style="text-align:center;">旧型号</td><td style="text-align:center;">X1000 及之前</td><td style="text-align:center;">ATI</td><td style="text-align:center;">不支持</td></tr></tbody></table><p>*<a href="https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units" target="_blank" rel="noreferrer">多种</a></p><p>*<a href="https://wiki.archlinux.org/title/AMDGPU_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">AMDGPU</a></p><p>*<a href="https://wiki.archlinux.org/title/AMDGPU_PRO" target="_blank" rel="noreferrer">AMDGPU PRO</a></p><p>*<a href="https://wiki.archlinux.org/title/ATI_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">ATI</a></p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>对于 <code>GCN 2.0</code> 及以下架构的老显卡，<strong>直接安装开源 ATI 驱动即可</strong>，原本老旧的闭源 Catalyst 驱动在 2021 年已被废弃。</p><p><code>GCN 2.0</code> 及以下架构的老显卡也<strong>不要使用开源 AMPGPU 驱动</strong>，因为其仅处于实验性质，需要各种自定义内核编译选项与配置，非常麻烦、得不偿失。</p><p>对于新型号（<code>GCN 3</code> 架构及更新）的集成显卡，<strong>直接安装开源驱动 AMDGPU 即可</strong>。</p></div><p>下面是一些例子：</p><ul><li><p>你的笔记本 cpu 是目前常见的 AMD Ryzen™ 7 4800U，它的集显为 Vega 8。通过查询，可知其为 <code>GCN 5.0</code> 架构，那么对照上表，你应该安装 AMDGPU 开源驱动。</p></li><li><p>你的台式机 cpu 是目前常见的 AMD Ryzen™ 5 3400G，它的集显为 Vega 11。通过查询，可知其为 <code>GCN 5.0</code> 架构，那么对照上表，你应该安装 AMDGPU 开源驱动。</p></li><li><p>再老一些的 7th Gen A10-9700 APU 处理器 ，它的集显为 Radeon R7。通过查询，可知其为 <code>GCN 2.0</code> 架构，那么对照上表，你应该安装 ATI 开源驱动。</p></li></ul><h4 id="安装驱动" tabindex="-1">安装驱动 <a class="header-anchor" href="#安装驱动" aria-label="Permalink to &quot;安装驱动&quot;">​</a></h4><p>通过以下命令安装如下几个包即可：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-dUQn4" id="tab-7RG3jCZ" checked><label data-title="开源驱动 AMDGPU" for="tab-7RG3jCZ">开源驱动 AMDGPU</label><input type="radio" name="group-dUQn4" id="tab-iMhaw-t"><label data-title="开源 ATI 驱动" for="tab-iMhaw-t">开源 ATI 驱动</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mesa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-mesa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xf86-video-amdgpu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vulkan-radeon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-vulkan-radeon</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mesa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-mesa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xf86-video-ati</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h2 id="独立显卡" tabindex="-1">独立显卡 <a class="header-anchor" href="#独立显卡" aria-label="Permalink to &quot;独立显卡&quot;">​</a></h2><h3 id="nvidia-独立显卡" tabindex="-1">NVIDIA 独立显卡 <a class="header-anchor" href="#nvidia-独立显卡" aria-label="Permalink to &quot;NVIDIA 独立显卡&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>部分 NVIDIA 独立显卡目前在 archlinux 下体验非常不好，存在以下问题：</p><ol><li>部分桌面特效（如窗口惯性晃动）很卡</li><li>游戏无法正常运行</li><li>画面撕裂</li></ol><p>若遇到了上述问题，建议在 archlinux 中还是单独使用集成显卡（如果有）吧（还可以节省电量）。如果要 🎮 打游戏不妨重启到 win10。</p></div><p>如有需要可以参阅 <a href="https://wiki.archlinux.org/title/NVIDIA_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p><ul><li>对于 <a href="https://nouveau.freedesktop.org/CodeNames.html#NV160" target="_blank" rel="noreferrer">Turing (NV160/TUXXX)</a> 系列或更新的显卡，需要安装 nvidia-open 驱动</li></ul><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>该驱动的质量目前处于 &#39;alpha quality&#39; 状态，所以也许会有问题。并且它暂时不适用于具有 AMD 集成 GPU 的系统。</p></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-GUwOf" id="tab-dhoIyDe" checked><label data-title="linux" for="tab-dhoIyDe">linux</label><input type="radio" name="group-GUwOf" id="tab-EtxvoLr"><label data-title="others" for="tab-EtxvoLr">others</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-nvidia-utils</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 必须安装</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-open-dkms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-nvidia-utils</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 必须安装</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><ul><li>其他较新型号的独立显卡使用以下命令直接安装如下几个包即可：</li></ul><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-SH-bB" id="tab-DU4TXHd" checked><label data-title="linux" for="tab-DU4TXHd">linux</label><input type="radio" name="group-SH-bB" id="tab-rcbMO8J"><label data-title="others" for="tab-rcbMO8J">others</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-nvidia-utils</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 必须安装</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-dkms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-nvidia-utils</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 必须安装</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><ul><li>如果是 GeForce 630 以下到 GeForce 400 系列的老卡，使用以下命令安装 <a href="https://aur.archlinux.org/packages/nvidia-390xx-dkms/" target="_blank" rel="noreferrer">nvidia-390xx-dkms</a><sup>aur</sup> 及其 32 位支持包：</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-390xx-dkms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-nvidia-390xx-utils</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>再老的显卡直接使用以下命令安装 <a href="https://wiki.archlinux.org/title/Nouveau_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">开源驱动</a> 即可：</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mesa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib32-mesa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xf86-video-nouveau</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>安装 NVIDIA 官方的驱动之后，需要编辑 <code>/etc/mkinitcpio.conf</code>，在 <code>HOOKS</code> 一行删除 <code>kms</code> 并保存，然后执行 <code>mkinitcpio -P</code> 重新生成一次镜像。这能防止 initramfs 包含 nouveau 模块，避免 nouveau 和官方驱动的冲突。</p></div><h3 id="amd-独立显卡" tabindex="-1">AMD 独立显卡 <a class="header-anchor" href="#amd-独立显卡" aria-label="Permalink to &quot;AMD 独立显卡&quot;">​</a></h3><p>AMD 独立显卡的驱动安装步骤实际上<strong>和 AMD 集成显卡是相同的</strong>，都需要先确定架构，然后选定正确的驱动安装即可。参考步骤 <a href="./graphic-driver.html#amd-集成显卡">AMD 集成显卡</a>。</p><h2 id="双显卡-集显-独显" tabindex="-1">双显卡（集显 + 独显） <a class="header-anchor" href="#双显卡-集显-独显" aria-label="Permalink to &quot;双显卡（集显 + 独显）&quot;">​</a></h2><p>如有需要可以参阅 <a href="https://wiki.archlinux.org/title/PRIME_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p><h3 id="nvidia-独立显卡-1" tabindex="-1">NVIDIA 独立显卡 <a class="header-anchor" href="#nvidia-独立显卡-1" aria-label="Permalink to &quot;NVIDIA 独立显卡&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>optimus-manager 已经支持 AMD 集成显卡 + NVIDIA 独立显卡组合。</p></div><p>如有需要可以参考 <a href="https://github.com/Askannz/optimus-manager/wiki" target="_blank" rel="noreferrer">optimus-manager 官方文档</a>。</p><p>同时拥有集成显卡与独立显卡的笔记本电脑，同样需要<strong>按照上述步骤先安装各个对应的软件包</strong>。除此之外还需要安装 optimus-manager<sup>cn / aur</sup> 以及其图形前端 optimus-manager-qt<sup>aur</sup>。通过该程序可以在集成显卡和独立显卡间轻松切换。optimus-manager 提供三种模式 —— 分别为仅用独显、仅用集显以及 hybrid 动态切换模式。</p><ol><li>使用以下命令安装相关软件包：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-NbpsD" id="tab--sdnN6T" checked><label data-title="cn" for="tab--sdnN6T">cn</label><input type="radio" name="group-NbpsD" id="tab-Gd-NYZk"><label data-title="aur" for="tab-Gd-NYZk">aur</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimus-manager</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimus-manager-qt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aur/optimus-manager</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimus-manager-qt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><ol start="2"><li>安装完成后重启即可使用。optimus-manager 安装完成后会默认设置 <code>optimus-manager.service</code> 服务自动启动，但建议还是通过以下命令手动设置一下：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> optimus-manager.service</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>重启后在在菜单栏打开 optimus-manager 即可使用。可在其设置中设置开机自动启动：</li></ol><p><img src="'+l+`" alt="optimus-manager-1"></p><p>此时你应该已经可以进行显卡切换了。</p><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>如果有问题，请详细阅读 optimus-manager 的文档，里面有详细的描述。由于各类问题太多，本文不再赘述。此处仅列出几项较为重要的注意事项:</p><ul><li>如果需要在独显和集显模式间切换，要注意你没安装各类 GPU 监控插件，它们会阻止显卡切换，导致不可预料的错误</li><li>不要使用 Nvidia Control Panel 中的 <code>Save to X Configuration file</code> ，会导致配置冲突</li><li>在显卡之间的切换时，重新登陆后如在 splash screen 卡住或者黑屏，可以尝试按照上述提示在 <code>tty1 ~ tty6</code> 之间进行切换</li></ul></div><h4 id="动态切换" tabindex="-1">动态切换 <a class="header-anchor" href="#动态切换" aria-label="Permalink to &quot;动态切换&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>hybrid 动态切换模式并不是自动的（类似 win10），需要手动添加环境变量。</p></div><p>hybrid 动态切换模式本质上是使用<strong>针对使用闭源驱动</strong>的双显卡 <a href="https://wiki.archlinux.org/title/PRIME#PRIME_render_offload" target="_blank" rel="noreferrer">PRIME</a> 方法进行切换 —— 这需要设置三个环境变量。有两种方法：</p><ol><li><p>通过命令手动添加前缀，也可直接添加环境变量在全局环境下（不推荐）。如果加在了全局环境中，在从 hybrid 动态切换模式切换到其他模式之前一定要去掉这三个环境变量，否则会黑屏</p></li><li><p>用 nvidia-prime 包提供的命令 <code>prime-run</code></p></li></ol><h5 id="prime-run-方法" tabindex="-1">prime-run 方法 <a class="header-anchor" href="#prime-run-方法" aria-label="Permalink to &quot;prime-run 方法&quot;">​</a></h5><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p><code>prime-run</code> 部分应用可以不需要安装 optimus-manager，直接运行。</p><p>但不推荐这样，因为除了部分应用会报错之外也无法使用仅独立显卡模式。</p></div><ol><li>通过以下命令安装 nvidia-prime 包：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-prime</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>通过以下命令（请将 <code>%command%</code> 替换为要运行的命令）以使用 NVIDIA 独立显卡运行程序：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prime-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %command%</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行 steam 游戏的例子：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prime-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steam://rungameid/570</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行 Dota 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prime-run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steam://rungameid/730</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行 CS:GO</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>steam 游戏的启动参数 <code>steam://rungameid/xxx</code> 可通过以下方式查找：</p><ol><li>右键需要运行的游戏图标 &gt; 点击 <code>编辑应用程序...</code>：</li></ol><p><img src="`+n+'" alt="steam-id_step-1"></p><ol start="2"><li>在 <code>应用程序</code> 选项卡 &gt; <code>命令</code> 处查看：</li></ol><p><img src="'+p+`" alt="steam-id_step-2"></p></div><h5 id="环境变量方法" tabindex="-1">环境变量方法 <a class="header-anchor" href="#环境变量方法" aria-label="Permalink to &quot;环境变量方法&quot;">​</a></h5><h6 id="手动输入" tabindex="-1">手动输入 <a class="header-anchor" href="#手动输入" aria-label="Permalink to &quot;手动输入&quot;">​</a></h6><p>通过以下命令（请将 <code>%command%</code> 替换为要运行的命令）以使用 NVIDIA 独立显卡运行程序：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">__NV_PRIME_RENDER_OFFLOAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __GLX_VENDOR_LIBRARY_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nvidia&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __VK_LAYER_NV_optimus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NVIDIA_only&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> %command%</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行 steam 游戏的例子：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">__NV_PRIME_RENDER_OFFLOAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __GLX_VENDOR_LIBRARY_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nvidia&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __VK_LAYER_NV_optimus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NVIDIA_only&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  steam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steam://rungameid/570</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行 Dota 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">__NV_PRIME_RENDER_OFFLOAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __GLX_VENDOR_LIBRARY_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nvidia&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> __VK_LAYER_NV_optimus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NVIDIA_only&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  steam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steam://rungameid/730</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行 CS:GO</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h6 id="全局变量" tabindex="-1">全局变量 <a class="header-anchor" href="#全局变量" aria-label="Permalink to &quot;全局变量&quot;">​</a></h6><div class="warning custom-block"><p class="custom-block-title">⚠️ 注意</p><p><a href="https://github.com/Askannz/optimus-manager/wiki/Nvidia-GPU-offloading-for-%22hybrid%22-mode#setup" target="_blank" rel="noreferrer">optimus-manager 官方文档</a> 中不推荐将此环境变量添加到全局环境。</p><p><em>It is not recommended to set those variables system-wide (like in <code>/etc/environment</code>), since it would defeat the point of hybrid mode, and can also break desktop compositing on some environment (resulting in a black screen).</em></p><p>也就是说会遇到这些问题：</p><ol><li>Kwin / 显示特效混合器（混成器）崩溃（毛玻璃效果消失，原本是透明或毛玻璃效果的背景变黑）</li><li>黑屏</li></ol></div><ol><li>使用 <code>vim</code> 编辑 <code>/etc/environment</code> 文件：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/environment</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>加入以下内容：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">__NV_PRIME_RENDER_OFFLOAD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">__GLX_VENDOR_LIBRARY_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nvidia&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">__VK_LAYER_NV_optimus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NVIDIA_only&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>保存并退出 <code>vim</code></li></ol><h4 id="电源管理" tabindex="-1">电源管理 <a class="header-anchor" href="#电源管理" aria-label="Permalink to &quot;电源管理&quot;">​</a></h4><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>如果不是强烈追求能效控制以及注重电池寿命的用户，那么可以略过此段。配置电源管理需要针对你的硬件以及笔记本型号尝试正确的电源管理方式。</p><p>此部分的设置可能导致黑屏，并且尝试过程可能较长，也可能会遇到各类问题。请根据自身需求和能力选择是否操作。</p></div><p>电源管理做的事情是，<strong>在只用集显的模式下，确保正确关闭独立显卡</strong>；而在混合模式下，绝大多数情况下 NVIDIA 模块实际是始终开启的，<strong>电源管理并不生效</strong>。</p><p>这件事情其实很复杂，因为对于不同的显卡型号，以及笔记本型号的组合，可行的方案都是不同的。笼统来说，最广泛适用的办法是 Bbswitch。但<strong>不建议上来就按照此方式安装使用</strong>，因为某些特定的硬件就是会出问题（黑屏）。</p><p>建议按照 <a href="https://github.com/Askannz/optimus-manager/wiki/A-guide--to-power-management-options" target="_blank" rel="noreferrer">optimus-manager 官方文档</a> 一步步尝试，最后找到属于你自己电脑合适的电源管理方式。<strong>此文档必须详细阅读！</strong></p><p>针对大多数笔记本适用的 Bbswitch，此处进行安装使用的讲解。</p><ol><li>通过以下命令安装包 <code>bbswitch</code>；若使用其它内核，则安装包 <code>bbswitch-dkms</code>：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-lOo6R" id="tab-XaMdEjN" checked><label data-title="linux" for="tab-XaMdEjN">linux</label><input type="radio" name="group-lOo6R" id="tab-vOvlM8w"><label data-title="others" for="tab-vOvlM8w">others</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bbswitch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bbswitch-dkms</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><ol start="2"><li>右键 optimus-manager 的托盘图标 &gt; 点击 <code>设置</code> &gt; 在 Optimus 选项卡中的 <code>switch method</code> 中选择 <code>Bbswitch</code> 即可：</li></ol><p><img src="`+r+'" alt="Bbswitch"></p><ol start="3"><li>重启之后，若使用仅集显模式使用如下命令验证 NVIDIA 独立显卡是否被禁用：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lspci</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NVIDIA</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+h+`" alt="off-check"></p><p>若有 <code>rev ff</code> 字样，则表示独显已经成功禁用。</p><h3 id="amd-独立显卡-1" tabindex="-1">AMD 独立显卡 <a class="header-anchor" href="#amd-独立显卡-1" aria-label="Permalink to &quot;AMD 独立显卡&quot;">​</a></h3><p>虽然 AMD 独立显卡无法使用 optimus-manager，但可以使用<strong>针对使用开源驱动</strong>的双显卡 <a href="https://wiki.archlinux.org/title/PRIME#For_open_source_drivers_-_PRIME" target="_blank" rel="noreferrer">PRIME</a> 方法进行切换。也就是使用 <code>DRI_PRIME=1</code> 前缀使用独立显卡（可能还更简单了？🤔）。</p><ul><li>通过以下命令（请将 <code>%command%</code> 替换为要运行的命令）以使用 AMD 独立显卡运行程序：</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DRI_PRIME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> %command%</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行 steam 游戏的例子：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DRI_PRIME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> steam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steam://rungameid/570</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行 Dota 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DRI_PRIME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> steam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> steam://rungameid/730</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 运行 CS:GO</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>可以使用以下命令分别对集成显卡和独立显卡进行性能测试，选择分数更高的一个使用：</li></ul><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-lN-1s" id="tab-pVM47p9" checked><label data-title="集成显卡" for="tab-pVM47p9">集成显卡</label><input type="radio" name="group-lN-1s" id="tab-GyqnDmp"><label data-title="独立显卡" for="tab-GyqnDmp">独立显卡</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">glmark2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DRI_PRIME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> glmark2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>关于 glmark2 的说明请参阅 <a href="./graphic-driver.html#glmark2">glmark2</a>。</p><ul><li>可以在 steam 游戏的启动前缀中加入 <code>DRI_PRIME=1 mangohud %command%</code> 来使用独显的同时显示帧数等信息。关于 <a href="https://aur.archlinux.org/packages/mangohud" target="_blank" rel="noreferrer">mangohud</a><sup>aur</sup> 的使用请参阅 <a href="./.html">这里</a>。</li></ul><h2 id="性能测试" tabindex="-1">性能测试 <a class="header-anchor" href="#性能测试" aria-label="Permalink to &quot;性能测试&quot;">​</a></h2><p>如有需要可以参考 <a href="https://wiki.archlinux.org/title/Benchmarking_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)" target="_blank" rel="noreferrer">ArchWiki 相关内容</a>。</p><h3 id="glxgears" tabindex="-1">glxgears <a class="header-anchor" href="#glxgears" aria-label="Permalink to &quot;glxgears&quot;">​</a></h3><p>最传统和广为人知的方式是使用 <code>glxgears</code> 命令进行测试，其属于 <a href="https://www.archlinux.org/packages/extra/x86_64/mesa-utils/" target="_blank" rel="noreferrer">mesa-utils</a> 包。</p><ol><li>通过以下命令安装 <a href="https://www.archlinux.org/packages/extra/x86_64/mesa-utils/" target="_blank" rel="noreferrer">mesa-utils</a> 包（可能已经安装了）：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mesa-utils</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>通过以下命令进行测试：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">glxgears</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>随后会弹出一个小窗口运行测试程序：</p><p><img src="`+d+'" alt="glxgears-1"></p><p>帧数会打印在终端中：</p><p><img src="'+o+'" alt="glxgears-2"></p><ol start="3"><li>使用 <code>Ctrl</code> + <code>C</code> 退出测试</li></ol><p><code>glxgears</code> 仅仅只能提供简单的测试场景及帧数显示，只测试了当前 OpenGL 功能的一小部分，功能明显不足。笔者推荐如下两种工具。</p><h3 id="glmark2" tabindex="-1">glmark2 <a class="header-anchor" href="#glmark2" aria-label="Permalink to &quot;glmark2&quot;">​</a></h3><p>glmark2 提供了一系列丰富的测试，涉及图形单元性能（缓冲、建筑、照明、纹理等）的不同方面，允许进行更全面和有意义的测试。每次测试单独计算帧速率。最终，程序根据之前的所有测试给出一个最终分数。在 archlinux 上属于包 <a href="https://aur.archlinux.org/packages/glmark2/" target="_blank" rel="noreferrer">glmark2</a><sup>cn / aur</sup>。</p><ol><li>使用以下命令安装 glmark2：</li></ol><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-MtBCQ" id="tab-gAGbEKC" checked><label data-title="cn" for="tab-gAGbEKC">cn</label><input type="radio" name="group-MtBCQ" id="tab-omxFqwm"><label data-title="aur" for="tab-omxFqwm">aur</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> glmark2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aur/glmark2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><ol start="2"><li>使用以下命令启动 glmark2：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">glmark2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>随后会弹出一个小窗口运行测试程序：</p><p><img src="'+c+'" alt="glmark2-1"></p><p>以笔者的硬件为例（集成显卡），测试结果如下：</p><p><img src="'+k+`" alt="glmark2-2"></p><h3 id="unigine-benchmark" tabindex="-1">Unigine benchmark <a class="header-anchor" href="#unigine-benchmark" aria-label="Permalink to &quot;Unigine benchmark&quot;">​</a></h3><p>Unigine 3D 引擎是一个更全面的基准测试工具。截止目前有五个版本，从新到旧分别是：</p><ul><li>superposition<sup>EULA</sup>（2017）</li><li>valley<sup>EULA</sup>（2013）</li><li>heaven<sup>EULA</sup>（2009）</li><li>tropics<sup>EULA</sup>（2008）</li><li>sanctuary<sup>EULA</sup>（2007）</li></ul><ol><li>可以使用以下命令从 <a href="https://aur.archlinux.org/packages/?O=0&amp;K=unigine" target="_blank" rel="noreferrer">AUR</a> 下载全部版本（选一个即可）：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unigine-superposition</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unigine-valley</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unigine-heaven</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unigine-tropics</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unigine-sanctuary</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+g+`" alt="unigine-heaven_step-1"></p><ol start="2"><li>使用以下命令启动 Unigine benchmark（输入对应安装的版本）：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unigine-superposition</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unigine-valley</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unigine-heaven</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unigine-tropics</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unigine-sanctuary</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+u+'" alt="unigine-heaven_step-2"></p><ol start="3"><li><p>调整参数后，点击 <code>RUN</code> 即可进入测试，帧数会显示在右上角</p></li><li><p>点击左上角 <code>基准</code> 开始基准测试</p></li><li><p>点击左上角 <code>退出</code> 并 <code>确定</code> 即可退出测试</p></li></ol><p>此基准测试工具拥有实时的环境遮挡、来自不同来源的相互关联的灯光、HDR 效果图、逼真的水和具有大气光散射的动态天空。此外还可以设置抗锯齿级别、纹理质量和滤波、各向异性和着色器质量。</p><h2 id="显卡信息查看" tabindex="-1">显卡信息查看 <a class="header-anchor" href="#显卡信息查看" aria-label="Permalink to &quot;显卡信息查看&quot;">​</a></h2><h3 id="nvidia-独立显卡-2" tabindex="-1">NVIDIA 独立显卡 <a class="header-anchor" href="#nvidia-独立显卡-2" aria-label="Permalink to &quot;NVIDIA 独立显卡&quot;">​</a></h3><p><code>nvidia-settings</code> 这个包即可全面的展示显卡相关信息（在步骤 <a href="./graphic-driver.html#独立显卡">NVIDIA 独立显卡</a> 中已经安装）。</p><h3 id="amd-独立显卡-集成显卡" tabindex="-1">AMD 独立显卡 / 集成显卡 <a class="header-anchor" href="#amd-独立显卡-集成显卡" aria-label="Permalink to &quot;AMD 独立显卡 / 集成显卡&quot;">​</a></h3><ol><li>通过以下命令安装 <a href="https://aur.archlinux.org/packages/?O=0&amp;SeB=nd&amp;K=radeon-profile-git&amp;outdated=&amp;SB=n&amp;SO=a&amp;PP=50&amp;do_Search=Go" target="_blank" rel="noreferrer">radeon-profile-git</a><sup>aur</sup> 包以及其依赖 <a href="https://aur.archlinux.org/packages/?O=0&amp;SeB=nd&amp;K=radeon-profile-daemon-git&amp;outdated=&amp;SB=n&amp;SO=a&amp;PP=50&amp;do_Search=Go" target="_blank" rel="noreferrer">radeon-profile-daemon-git</a><sup>aur</sup>：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> radeon-profile-git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> radeon-profile-daemon-git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>使用以下命令启动这个进程，即可以图形化的方式查看 AMD 显卡信息：</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> radeon-profile-daemon.service</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">ℹ️ 提示</p><p>不要对左下角的 <code>auto low high</code> 进行更改，有 bug 会导致卡死。</p><p>同时，显存占用在某些型号显卡上展示可能有误。</p></div>',154)]))}const _=a(b,[["render",m]]);export{x as __pageData,_ as default};
